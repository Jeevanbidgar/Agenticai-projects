from __future__ import annotations

from pathlib import Path
from loguru import logger
from utils.state import TestState, StepResult


async def report_results(state: TestState) -> TestState:
    logger.info("[report_results] Reporting (nodes side)")
    run_dir = Path(state.runtime.get("run_dir", "."))
    storage_path = run_dir / "storage.json"
    try:
        storage_path.write_text(
            __import__("json").dumps(state.storage_artifacts, indent=2), encoding="utf-8"
        )
    except Exception:
        if not storage_path.exists():
            storage_path.write_text("{}", encoding="utf-8")
    state.steps.append(StepResult(name="report_results", status="ok", message="Report artifacts initialized"))
    return state


