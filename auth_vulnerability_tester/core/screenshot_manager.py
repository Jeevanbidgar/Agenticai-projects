from __future__ import annotations

from pathlib import Path
from typing import Optional

from loguru import logger


class ScreenshotManager:
    """Phase 1 skeleton for screenshot capture.

    Later phases will capture from Playwright pages. For now, creates placeholders.
    """

    def __init__(self, screenshots_dir: Path, full_page: bool = True) -> None:
        self.screenshots_dir = screenshots_dir
        self.full_page = full_page
        self.screenshots_dir.mkdir(parents=True, exist_ok=True)

    async def capture(self, name: str) -> Optional[Path]:  # pragma: no cover - stub
        path = self.screenshots_dir / f"{name}.png"
        try:
            # Create an empty placeholder file to indicate where screenshots will go
            path.touch(exist_ok=True)
            logger.debug(f"[ScreenshotManager] Placeholder created: {path}")
            return path
        except Exception as exc:  # pragma: no cover - minimal error path
            logger.error(f"Failed to create placeholder screenshot: {exc}")
            return None


